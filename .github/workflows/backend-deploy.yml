name: Package Lambda Function and Deploy with Terraform

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**' # Only trigger when something in `backend` changes

jobs:
  deploy:
    name: Test and Deploy with Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      # 1. Check out your repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up Python so we can install dependencies and run tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.1'

      # 2.5. Install Poetry
      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry --version

      # 3. Install dependencies
      - name: Install Python Dependencies
        working-directory: backend/lambda_cloudresume
        run: |
          poetry install

      # 4. Run Python Tests
      #    If tests fail, the job stops here and won't proceed to deploy
      - name: Run Tests
        working-directory: backend/lambda_cloudresume
        run: |
          poetry run pytest

      # 5. Zip the Lambda function
      - name: Package Lambda Function
        working-directory: backend/lambda_cloudresume
        run: |
          chmod +x package.sh
          ./package.sh

      # 6. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      # 7. Terraform init
      - name: Terraform Init
        working-directory: backend/terraform
        run: terraform init

      # 8. Terraform plan
      - name: Terraform Plan
        working-directory: backend/terraform
        run: terraform plan -out=tfplan

      # 9. Terraform apply
      - name: Terraform Apply
        working-directory: backend/terraform
        run: terraform apply -auto-approve tfplan
